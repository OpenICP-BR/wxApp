//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: V1.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "V1.h"


// Declare the bitmap loading function
extern void wxCrafter90S2iSInitBitmapResources();

static bool bBitmapLoaded = false;


MainFrame::MainFrame(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxFrame(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxCrafter90S2iSInitBitmapResources();
        bBitmapLoaded = true;
    }
    
    wxBoxSizer* bSizer1 = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(bSizer1);
    
    lblTestVersion = new wxStaticText(this, wxID_ANY, _("VERSÃO DE TESTES! - SEM VALIDADE LEGAL"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxALIGN_CENTRE);
    lblTestVersion->SetForegroundColour(wxColour(wxT("rgb(255,0,0)")));
    wxFont lblTestVersionFont = wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT);
    lblTestVersionFont.SetWeight(wxFONTWEIGHT_BOLD);
    lblTestVersion->SetFont(lblTestVersionFont);
    
    bSizer1->Add(lblTestVersion, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    nbMain = new wxNotebook(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    nbMain->SetName(wxT("nbMain"));
    
    bSizer1->Add(nbMain, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    panelSign = new wxPanel(nbMain, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(nbMain, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    nbMain->AddPage(panelSign, _("Assinar"), false);
    
    wxBoxSizer* bSizer6 = new wxBoxSizer(wxVERTICAL);
    panelSign->SetSizer(bSizer6);
    
    wxFlexGridSizer* flexGridSizer38 = new wxFlexGridSizer(0, 2, 0, 0);
    flexGridSizer38->SetFlexibleDirection( wxBOTH );
    flexGridSizer38->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer38->AddGrowableCol(1);
    
    bSizer6->Add(flexGridSizer38, 1, wxEXPAND, WXC_FROM_DIP(5));
    
    lblFileToSign = new wxStaticText(panelSign, wxID_ANY, _("Arquivo(s) para assinar:"), wxDefaultPosition, wxDLG_UNIT(panelSign, wxSize(-1, -1)), 0);
    
    flexGridSizer38->Add(lblFileToSign, 0, wxALL|wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(5));
    
    wxBoxSizer* bSizer8 = new wxBoxSizer(wxHORIZONTAL);
    
    flexGridSizer38->Add(bSizer8, 10, wxEXPAND, WXC_FROM_DIP(5));
    
    inpFileToSign = new wxTextCtrl(panelSign, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(panelSign, wxSize(-1, -1)), wxTE_READONLY);
    #if wxVERSION_NUMBER >= 3000
    inpFileToSign->SetHint(wxT(""));
    #endif
    
    bSizer8->Add(inpFileToSign, 10, wxALL|wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(5));
    
    btnFileToSign = new wxButton(panelSign, wxID_ANY, _("Escolher"), wxDefaultPosition, wxDLG_UNIT(panelSign, wxSize(-1, -1)), 0);
    
    bSizer8->Add(btnFileToSign, 0, wxALL|wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(5));
    
    lblSignAs = new wxStaticText(panelSign, wxID_ANY, _("Assinar como:"), wxDefaultPosition, wxDLG_UNIT(panelSign, wxSize(-1, -1)), 0);
    
    flexGridSizer38->Add(lblSignAs, 0, wxALL|wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(5));
    
    wxArrayString choSignAsArr;
    choSignAs = new wxChoice(panelSign, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(panelSign, wxSize(-1, -1)), choSignAsArr, 0);
    
    flexGridSizer38->Add(choSignAs, 10, wxALL|wxEXPAND|wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(5));
    
    lblCertPass = new wxStaticText(panelSign, wxID_ANY, _("Senha do certificado:"), wxDefaultPosition, wxDLG_UNIT(panelSign, wxSize(-1,-1)), 0);
    
    flexGridSizer38->Add(lblCertPass, 0, wxALL|wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(5));
    
    inpCertSignerPass = new wxTextCtrl(panelSign, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(panelSign, wxSize(-1,-1)), wxTE_PASSWORD);
    #if wxVERSION_NUMBER >= 3000
    inpCertSignerPass->SetHint(wxT(""));
    #endif
    
    flexGridSizer38->Add(inpCertSignerPass, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    btnSign = new wxButton(panelSign, wxID_ANY, _("Assinar"), wxDefaultPosition, wxDLG_UNIT(panelSign, wxSize(-1, -1)), 0);
    btnSign->SetDefault();
    
    bSizer6->Add(btnSign, 0, wxALL|wxALIGN_CENTER|wxALIGN_TOP, WXC_FROM_DIP(5));
    
    bSizer6->Add(0, 0, 1, wxALL, WXC_FROM_DIP(5));
    
    panelVerify = new wxPanel(nbMain, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(nbMain, wxSize(-1, -1)), wxTAB_TRAVERSAL);
    nbMain->AddPage(panelVerify, _("Verificar"), false);
    
    wxFlexGridSizer* flexGridSizer39 = new wxFlexGridSizer(0, 2, 0, 0);
    flexGridSizer39->SetFlexibleDirection( wxBOTH );
    flexGridSizer39->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer39->AddGrowableCol(1);
    panelVerify->SetSizer(flexGridSizer39);
    
    lblSignatureFile = new wxStaticText(panelVerify, wxID_ANY, _("Arquivo(s) de assinatura (.p7s):"), wxDefaultPosition, wxDLG_UNIT(panelVerify, wxSize(-1, -1)), 0);
    
    flexGridSizer39->Add(lblSignatureFile, 0, wxALL|wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(5));
    
    wxBoxSizer* bSizer81 = new wxBoxSizer(wxHORIZONTAL);
    
    flexGridSizer39->Add(bSizer81, 10, wxEXPAND, WXC_FROM_DIP(5));
    
    inpFileToVerify = new wxTextCtrl(panelVerify, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(panelVerify, wxSize(-1, -1)), wxTE_READONLY);
    #if wxVERSION_NUMBER >= 3000
    inpFileToVerify->SetHint(wxT(""));
    #endif
    
    bSizer81->Add(inpFileToVerify, 10, wxALL|wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(5));
    
    btnFileToVerify = new wxButton(panelVerify, wxID_ANY, _("Escolher"), wxDefaultPosition, wxDLG_UNIT(panelVerify, wxSize(-1, -1)), 0);
    
    bSizer81->Add(btnFileToVerify, 0, wxALL|wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(5));
    
    flexGridSizer39->Add(0, 0, 1, wxEXPAND, WXC_FROM_DIP(5));
    
    panelCerts = new wxPanel(nbMain, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(nbMain, wxSize(-1, -1)), wxTAB_TRAVERSAL);
    nbMain->AddPage(panelCerts, _("Certificados Digitais"), false);
    
    wxBoxSizer* boxSizer81 = new wxBoxSizer(wxVERTICAL);
    panelCerts->SetSizer(boxSizer81);
    
    panelCertsList = new wxPanel(panelCerts, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(panelCerts, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    
    boxSizer81->Add(panelCertsList, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    wxBoxSizer* boxSizer139 = new wxBoxSizer(wxHORIZONTAL);
    panelCertsList->SetSizer(boxSizer139);
    
    wxBoxSizer* boxSizer142 = new wxBoxSizer(wxVERTICAL);
    
    boxSizer139->Add(boxSizer142, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    wxArrayString listCertsArr;
    listCertsArr.Add(_("1"));
    listCertsArr.Add(_("b"));
    listCertsArr.Add(_("c"));
    listCertsArr.Add(_("d"));
    listCerts = new wxListBox(panelCertsList, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(panelCertsList, wxSize(-1,-1)), listCertsArr, wxLB_HSCROLL|wxLB_SINGLE);
    
    boxSizer142->Add(listCerts, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    btnAddCert = new wxButton(panelCertsList, wxID_ANY, _("Adicionar Certificado"), wxDefaultPosition, wxDLG_UNIT(panelCertsList, wxSize(-1,-1)), 0);
    
    boxSizer142->Add(btnAddCert, 0, wxALL|wxEXPAND|wxALIGN_CENTER, WXC_FROM_DIP(5));
    
    wxFlexGridSizer* flexGridSizer481 = new wxFlexGridSizer(0, 2, 0, 0);
    flexGridSizer481->SetFlexibleDirection( wxBOTH );
    flexGridSizer481->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer481->AddGrowableCol(1);
    
    boxSizer139->Add(flexGridSizer481, 2, wxEXPAND, WXC_FROM_DIP(5));
    
    lblCertInfoName = new wxStaticText(panelCertsList, wxID_ANY, _("Nome:"), wxDefaultPosition, wxDLG_UNIT(panelCertsList, wxSize(-1, -1)), 0);
    
    flexGridSizer481->Add(lblCertInfoName, 0, wxALL, WXC_FROM_DIP(5));
    
    outCertInfoName = new wxStaticText(panelCertsList, wxID_ANY, _("Nome Sobrenome"), wxDefaultPosition, wxDLG_UNIT(panelCertsList, wxSize(-1, -1)), 0);
    
    flexGridSizer481->Add(outCertInfoName, 0, wxALL, WXC_FROM_DIP(5));
    
    lblCertInfoEmail = new wxStaticText(panelCertsList, wxID_ANY, _("Email:"), wxDefaultPosition, wxDLG_UNIT(panelCertsList, wxSize(-1, -1)), 0);
    
    flexGridSizer481->Add(lblCertInfoEmail, 0, wxALL, WXC_FROM_DIP(5));
    
    outCertInfoEmail = new wxStaticText(panelCertsList, wxID_ANY, _("a@b.com"), wxDefaultPosition, wxDLG_UNIT(panelCertsList, wxSize(-1, -1)), 0);
    
    flexGridSizer481->Add(outCertInfoEmail, 0, wxALL, WXC_FROM_DIP(5));
    
    lblCertInfoCPF = new wxStaticText(panelCertsList, wxID_ANY, _("CPF/CNPJ:"), wxDefaultPosition, wxDLG_UNIT(panelCertsList, wxSize(-1, -1)), 0);
    
    flexGridSizer481->Add(lblCertInfoCPF, 0, wxALL, WXC_FROM_DIP(5));
    
    outCertInfoCPF = new wxStaticText(panelCertsList, wxID_ANY, _("000.000.000-00"), wxDefaultPosition, wxDLG_UNIT(panelCertsList, wxSize(-1, -1)), 0);
    
    flexGridSizer481->Add(outCertInfoCPF, 0, wxALL, WXC_FROM_DIP(5));
    
    lblCertInfoAC = new wxStaticText(panelCertsList, wxID_ANY, _("Emissor:"), wxDefaultPosition, wxDLG_UNIT(panelCertsList, wxSize(-1, -1)), 0);
    
    flexGridSizer481->Add(lblCertInfoAC, 0, wxALL, WXC_FROM_DIP(5));
    
    outCertInfoAC = new wxStaticText(panelCertsList, wxID_ANY, _("AC Xyz"), wxDefaultPosition, wxDLG_UNIT(panelCertsList, wxSize(-1, -1)), 0);
    
    flexGridSizer481->Add(outCertInfoAC, 0, wxALL, WXC_FROM_DIP(5));
    
    lblCertInfoNotBefore = new wxStaticText(panelCertsList, wxID_ANY, _("Válido de:"), wxDefaultPosition, wxDLG_UNIT(panelCertsList, wxSize(-1,-1)), 0);
    
    flexGridSizer481->Add(lblCertInfoNotBefore, 0, wxALL, WXC_FROM_DIP(5));
    
    outCertInfoNotBefore = new wxStaticText(panelCertsList, wxID_ANY, _("01/01/2000"), wxDefaultPosition, wxDLG_UNIT(panelCertsList, wxSize(-1,-1)), 0);
    
    flexGridSizer481->Add(outCertInfoNotBefore, 0, wxALL, WXC_FROM_DIP(5));
    
    lblCertInfoNotAfter = new wxStaticText(panelCertsList, wxID_ANY, _("Válido até:"), wxDefaultPosition, wxDLG_UNIT(panelCertsList, wxSize(-1,-1)), 0);
    
    flexGridSizer481->Add(lblCertInfoNotAfter, 0, wxALL, WXC_FROM_DIP(5));
    
    outCertInfoNotAfter = new wxStaticText(panelCertsList, wxID_ANY, _("01/01/2001"), wxDefaultPosition, wxDLG_UNIT(panelCertsList, wxSize(-1,-1)), 0);
    
    flexGridSizer481->Add(outCertInfoNotAfter, 0, wxALL, WXC_FROM_DIP(5));
    
    panelCertsFirst = new wxPanel(panelCerts, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(panelCerts, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    panelCertsFirst->Hide();
    
    boxSizer81->Add(panelCertsFirst, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    wxBoxSizer* boxSizer82 = new wxBoxSizer(wxVERTICAL);
    panelCertsFirst->SetSizer(boxSizer82);
    
    boxSizer82->Add(0, 0, 1, wxEXPAND, WXC_FROM_DIP(5));
    
    btnFirstCert = new wxButton(panelCertsFirst, wxID_ANY, _("Adicionar certificado"), wxDefaultPosition, wxDLG_UNIT(panelCertsFirst, wxSize(-1, -1)), 0);
    btnFirstCert->SetDefault();
    
    boxSizer82->Add(btnFirstCert, 0, wxALL|wxALIGN_CENTER|wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(5));
    
    linkGetCertificate = new wxHyperlinkCtrl(panelCertsFirst, wxID_ANY, _("Onde consigo um?"), wxT("http://www.iti.gov.br/certificado-digital/58-certificado-digital/87-como-obter"), wxDefaultPosition, wxDLG_UNIT(panelCertsFirst, wxSize(-1, -1)), wxHL_DEFAULT_STYLE);
    
    boxSizer82->Add(linkGetCertificate, 0, wxALL|wxALIGN_CENTER, WXC_FROM_DIP(5));
    
    boxSizer82->Add(0, 0, 1, wxEXPAND, WXC_FROM_DIP(5));
    
    panelHelp = new wxPanel(nbMain, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(nbMain, wxSize(-1, -1)), wxTAB_TRAVERSAL);
    nbMain->AddPage(panelHelp, _("Ajuda"), false);
    
    wxFlexGridSizer* flexGridSizer205 = new wxFlexGridSizer(0, 2, 0, 0);
    flexGridSizer205->SetFlexibleDirection( wxBOTH );
    flexGridSizer205->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer205->AddGrowableCol(1);
    panelHelp->SetSizer(flexGridSizer205);
    
    m_staticText211 = new wxStaticText(panelHelp, wxID_ANY, _("Site:"), wxDefaultPosition, wxDLG_UNIT(panelHelp, wxSize(-1,-1)), 0);
    
    flexGridSizer205->Add(m_staticText211, 0, wxALL|wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(5));
    
    m_hyperLink213 = new wxHyperlinkCtrl(panelHelp, wxID_ANY, _("OpenICP-BR.github.io"), wxT("https://OpenICP-BR.github.io"), wxDefaultPosition, wxDLG_UNIT(panelHelp, wxSize(-1,-1)), wxHL_DEFAULT_STYLE);
    m_hyperLink213->SetNormalColour(wxColour(wxT("#0000FF")));
    m_hyperLink213->SetHoverColour(wxColour(wxT("#0000FF")));
    m_hyperLink213->SetVisitedColour(wxColour(wxT("#FF0000")));
    
    flexGridSizer205->Add(m_hyperLink213, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText194 = new wxStaticText(panelHelp, wxID_ANY, _("Versão do OpenICP-BR:"), wxDefaultPosition, wxDLG_UNIT(panelHelp, wxSize(-1,-1)), 0);
    
    flexGridSizer205->Add(m_staticText194, 0, wxALL, WXC_FROM_DIP(5));
    
    outOpenICPVer = new wxStaticText(panelHelp, wxID_ANY, _("Static Text Label"), wxDefaultPosition, wxDLG_UNIT(panelHelp, wxSize(-1,-1)), 0);
    
    flexGridSizer205->Add(outOpenICPVer, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText198 = new wxStaticText(panelHelp, wxID_ANY, _("Versão da libICP:"), wxDefaultPosition, wxDLG_UNIT(panelHelp, wxSize(-1,-1)), 0);
    
    flexGridSizer205->Add(m_staticText198, 0, wxALL, WXC_FROM_DIP(5));
    
    outLibICPVer = new wxStaticText(panelHelp, wxID_ANY, _("Static Text Label"), wxDefaultPosition, wxDLG_UNIT(panelHelp, wxSize(-1,-1)), 0);
    
    flexGridSizer205->Add(outLibICPVer, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText202 = new wxStaticText(panelHelp, wxID_ANY, _("Versão do wxWidgets:"), wxDefaultPosition, wxDLG_UNIT(panelHelp, wxSize(-1,-1)), 0);
    
    flexGridSizer205->Add(m_staticText202, 0, wxALL, WXC_FROM_DIP(5));
    
    outWxVer = new wxStaticText(panelHelp, wxID_ANY, _("Static Text Label"), wxDefaultPosition, wxDLG_UNIT(panelHelp, wxSize(-1,-1)), 0);
    
    flexGridSizer205->Add(outWxVer, 0, wxALL, WXC_FROM_DIP(5));
    
    flexGridSizer205->Add(0, 0, 1, wxALL, WXC_FROM_DIP(5));
    
    
    #if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(nbMain)){
        wxPersistenceManager::Get().RegisterAndRestore(nbMain);
    } else {
        wxPersistenceManager::Get().Restore(nbMain);
    }
    #endif
    
    SetName(wxT("MainFrame"));
    SetMinClientSize(wxSize(700,300));
    SetSize(-1,-1);
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
    if(GetParent()) {
        CentreOnParent(wxBOTH);
    } else {
        CentreOnScreen(wxBOTH);
    }
#if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(this)) {
        wxPersistenceManager::Get().RegisterAndRestore(this);
    } else {
        wxPersistenceManager::Get().Restore(this);
    }
#endif
}

MainFrame::~MainFrame()
{
}

wizAddCert::wizAddCert(wxWindow* parent, wxWindowID id, const wxString& title, const wxBitmap& bmp, const wxPoint& pos, long style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxCrafter90S2iSInitBitmapResources();
        bBitmapLoaded = true;
    }
    Create(parent, id, title, wxNullBitmap, pos, style);
    
    wpAddCertLoc = new wxWizardPageSimple(this, NULL, NULL, wxNullBitmap);
    m_pages.push_back(wpAddCertLoc);
    
    wxBoxSizer* boxSizer146 = new wxBoxSizer(wxVERTICAL);
    wpAddCertLoc->SetSizer(boxSizer146);
    
    lblCertFile = new wxStaticText(wpAddCertLoc, wxID_ANY, _("Arquivo com o certificado A1 (.p12 ou .pfx):"), wxDefaultPosition, wxDLG_UNIT(wpAddCertLoc, wxSize(-1,-1)), 0);
    lblCertFile->Wrap(200);
    
    boxSizer146->Add(lblCertFile, 0, wxALL, WXC_FROM_DIP(5));
    
    fpCertFile = new wxFilePickerCtrl(wpAddCertLoc, wxID_ANY, wxEmptyString, _("Certificado tipo A1"), wxT("*.p12;*.pfx"), wxDefaultPosition, wxDLG_UNIT(wpAddCertLoc, wxSize(-1, -1)), wxFLP_DEFAULT_STYLE);
    
    boxSizer146->Add(fpCertFile, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    wpAddCertPass = new wxWizardPageSimple(this, NULL, NULL, wxNullBitmap);
    m_pages.push_back(wpAddCertPass);
    
    wxBoxSizer* boxSizer152 = new wxBoxSizer(wxVERTICAL);
    wpAddCertPass->SetSizer(boxSizer152);
    
    lblCertPass = new wxStaticText(wpAddCertPass, wxID_ANY, _("Senha do certificado:"), wxDefaultPosition, wxDLG_UNIT(wpAddCertPass, wxSize(-1,-1)), 0);
    
    boxSizer152->Add(lblCertPass, 0, wxALL, WXC_FROM_DIP(5));
    
    inpCertPass = new wxTextCtrl(wpAddCertPass, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(wpAddCertPass, wxSize(-1, -1)), wxTE_PASSWORD);
    #if wxVERSION_NUMBER >= 3000
    inpCertPass->SetHint(wxT(""));
    #endif
    
    boxSizer152->Add(inpCertPass, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_staticText145 = new wxStaticText(wpAddCertPass, wxID_ANY, _("Sua senha não será armazenada."), wxDefaultPosition, wxDLG_UNIT(wpAddCertPass, wxSize(-1,-1)), 0);
    
    boxSizer152->Add(m_staticText145, 0, wxALL, WXC_FROM_DIP(5));
    
    boxSizer152->Add(0, 0, 1, wxALL, WXC_FROM_DIP(5));
    
    wpAddCertInfo = new wxWizardPageSimple(this, NULL, NULL, wxNullBitmap);
    m_pages.push_back(wpAddCertInfo);
    if (m_pages.size() > 1) {
        for(size_t i=1; i<m_pages.size(); i++) {
            wxWizardPageSimple::Chain(m_pages.at(i-1), m_pages.at(i));
        }
    }
    GetPageAreaSizer()->Add(m_pages.at(0));
    
    wxStaticBoxSizer* sbSizer2 = new wxStaticBoxSizer( new wxStaticBox(wpAddCertInfo, wxID_ANY, _("Informações do Certificado")), wxVERTICAL);
    wpAddCertInfo->SetSizer(sbSizer2);
    
    wxFlexGridSizer* flexGridSizer48 = new wxFlexGridSizer(0, 2, 0, 0);
    flexGridSizer48->SetFlexibleDirection( wxBOTH );
    flexGridSizer48->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer48->AddGrowableCol(1);
    
    sbSizer2->Add(flexGridSizer48, 1, wxEXPAND, WXC_FROM_DIP(5));
    
    lblCertName = new wxStaticText(wpAddCertInfo, wxID_ANY, _("Nome:"), wxDefaultPosition, wxDLG_UNIT(wpAddCertInfo, wxSize(-1, -1)), 0);
    
    flexGridSizer48->Add(lblCertName, 0, wxALL, WXC_FROM_DIP(5));
    
    outCertName = new wxStaticText(wpAddCertInfo, wxID_ANY, _("Nome Sobrenome"), wxDefaultPosition, wxDLG_UNIT(wpAddCertInfo, wxSize(-1, -1)), 0);
    
    flexGridSizer48->Add(outCertName, 0, wxALL, WXC_FROM_DIP(5));
    
    lblCertEmail = new wxStaticText(wpAddCertInfo, wxID_ANY, _("Email:"), wxDefaultPosition, wxDLG_UNIT(wpAddCertInfo, wxSize(-1, -1)), 0);
    
    flexGridSizer48->Add(lblCertEmail, 0, wxALL, WXC_FROM_DIP(5));
    
    outCertEmail = new wxStaticText(wpAddCertInfo, wxID_ANY, _("a@b.com"), wxDefaultPosition, wxDLG_UNIT(wpAddCertInfo, wxSize(-1, -1)), 0);
    
    flexGridSizer48->Add(outCertEmail, 0, wxALL, WXC_FROM_DIP(5));
    
    lblCertCPF = new wxStaticText(wpAddCertInfo, wxID_ANY, _("CPF/CNPJ:"), wxDefaultPosition, wxDLG_UNIT(wpAddCertInfo, wxSize(-1, -1)), 0);
    
    flexGridSizer48->Add(lblCertCPF, 0, wxALL, WXC_FROM_DIP(5));
    
    outCertCPF = new wxStaticText(wpAddCertInfo, wxID_ANY, _("000.000.000-00"), wxDefaultPosition, wxDLG_UNIT(wpAddCertInfo, wxSize(-1, -1)), 0);
    
    flexGridSizer48->Add(outCertCPF, 0, wxALL, WXC_FROM_DIP(5));
    
    lblCertAC = new wxStaticText(wpAddCertInfo, wxID_ANY, _("Emissor:"), wxDefaultPosition, wxDLG_UNIT(wpAddCertInfo, wxSize(-1, -1)), 0);
    
    flexGridSizer48->Add(lblCertAC, 0, wxALL, WXC_FROM_DIP(5));
    
    outCertAC = new wxStaticText(wpAddCertInfo, wxID_ANY, _("AC Xyz"), wxDefaultPosition, wxDLG_UNIT(wpAddCertInfo, wxSize(-1, -1)), 0);
    
    flexGridSizer48->Add(outCertAC, 0, wxALL, WXC_FROM_DIP(5));
    
    lblCertNotBefore = new wxStaticText(wpAddCertInfo, wxID_ANY, _("Válido de:"), wxDefaultPosition, wxDLG_UNIT(wpAddCertInfo, wxSize(-1,-1)), 0);
    
    flexGridSizer48->Add(lblCertNotBefore, 0, wxALL, WXC_FROM_DIP(5));
    
    outCertNotBefore = new wxStaticText(wpAddCertInfo, wxID_ANY, _("01/01/2000"), wxDefaultPosition, wxDLG_UNIT(wpAddCertInfo, wxSize(-1,-1)), 0);
    
    flexGridSizer48->Add(outCertNotBefore, 0, wxALL, WXC_FROM_DIP(5));
    
    lblCertNotAfter = new wxStaticText(wpAddCertInfo, wxID_ANY, _("Válido até:"), wxDefaultPosition, wxDLG_UNIT(wpAddCertInfo, wxSize(-1,-1)), 0);
    
    flexGridSizer48->Add(lblCertNotAfter, 0, wxALL, WXC_FROM_DIP(5));
    
    outCertNotAfter = new wxStaticText(wpAddCertInfo, wxID_ANY, _("01/01/2001"), wxDefaultPosition, wxDLG_UNIT(wpAddCertInfo, wxSize(-1,-1)), 0);
    
    flexGridSizer48->Add(outCertNotAfter, 0, wxALL, WXC_FROM_DIP(5));
    
    SetName(wxT("wizAddCert"));
    SetSize(-1,-1);
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
    if(GetParent()) {
        CentreOnParent(wxBOTH);
    } else {
        CentreOnScreen(wxBOTH);
    }
#if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(this)) {
        wxPersistenceManager::Get().RegisterAndRestore(this);
    } else {
        wxPersistenceManager::Get().Restore(this);
    }
#endif
}

wizAddCert::~wizAddCert()
{
}
